apiVersion: v1
kind: Template
labels:
  template: prometheus-adapter-template
message: Your template has been created.
metadata:
  name: prometheus-adapter-template
objects:

#SERVICE ACCOUNT
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: ${NAME} #custom-metrics-apiserver
    namespace: ${NAMESPACE}
    labels:
      app: ${NAME}

#CONFIG MAP
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME} #adapter-config
    namespace: ${NAMESPACE}
    labels:
      app: ${NAME}
  data:
    config.yaml: |
      rules:
      - seriesQuery: '{__name__="nginx_http_requests_total",namespace!="",pod!=""}'
        resources:
          overrides:
            namespace: {resource: "namespace"}
            pod: {resource: "pod"}
            service: {resource: "service"}
        name:
          matches: "^(.*)_total"
          as: "${1}_per_second"
        metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)'

#SERVICE
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: prometheus-adapter-tls
    labels:
      app: ${NAME}
      name: ${NAME} #prometheus-adapter
    name: ${NAME}
    namespace: {NAMESPACE}
  spec:
    ports:
      - name: https
        port: 443
        targetPort: 6443
    selector:
      app: ${NAME} #prometheus-adapter
    type: ClusterIP

#API SERVICE
- apiVersion: apiregistration.k8s.io/v1beta1
  kind: APIService
  metadata:
    name: v1beta1.custom.metrics.k8s.io
    namespace: {NAMESPACE}
    labels:
      app: ${NAME}
  spec:
    service:
      name: ${NAME}
      namespace: ${NAMESPACE}
    group: custom.metrics.k8s.io
    version: v1beta1
    insecureSkipTLSVerify: true
    groupPriorityMinimum: 100
    versionPriority: 100

#DEPLOYMENT
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ${NAME} #prometheus-adapter
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${NAME} #prometheus-adapter
    template:
      metadata:
        labels:
          app: ${NAME} #prometheus-adapter
        name: ${NAME} #prometheus-adapter
      spec:
        serviceAccountName: ${NAME} #custom-metrics-apiserver
        containers:
          - name: ${NAME} #prometheus-adapter
            image: directxman12/k8s-prometheus-adapter-amd64
            args:
              - --secure-port=6443
              - --tls-cert-file=/var/run/serving-cert/tls.crt
              - --tls-private-key-file=/var/run/serving-cert/tls.key
              - --logtostderr=true
              #- --prometheus-url=http://prometheus.prom.svc:9090/
              - --prometheus-url=http://prometheus-operated.prom.svc:9090/
              - --metrics-relist-interval=1m
              - --v=4
              - --config=/etc/adapter/config.yaml
            ports:
              - containerPort: 6443
            volumeMounts:
              - mountPath: /var/run/serving-cert
                name: volume-serving-cert
                readOnly: true
              - mountPath: /etc/adapter/
                name: config
                readOnly: true
              - mountPath: /tmp
                name: tmp-vol
        volumes:
          - name: volume-serving-cert
            secret:
              secretName: prometheus-adapter-tls
          - name: config
            configMap:
              name: adapter-config
          - name: tmp-vol
            emptyDir: {}

#PARAMETRI
parameters:

  - description: Name.
    displayName: Name
    name: NAME
    value: "prometheus-adapter"

  - description: Namespace.
    displayName: Namespace
    name: NAMESPACE
    value: "myprometheus"