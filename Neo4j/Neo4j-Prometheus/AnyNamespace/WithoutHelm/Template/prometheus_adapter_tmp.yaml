kind: ServiceAccount
apiVersion: v1
metadata:
  name: external-metrics-apiserver
  namespace: NAMESPACE
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.external.metrics.k8s.io
  namespace: NAMESPACE
spec:
  service:
    name: prometheus-adapter-external
    namespace: NAMESPACE
  group: external.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
---
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: adapter-config-external
#  namespace: NAMESPACE
#data:
#  config.yaml: |
#    externalRules:
#    - seriesQuery: '{__name__="neo4j_neo4j_transaction_active",namespace!="",pod!=""}'
#      resources:
#        overrides:
#          namespace: {resource: "namespace"}
#          pod: {resource: "pod"}
#          service: {resource: "service"}
#      name:
#        matches: "neo4j_neo4j_transaction_active"
#        as: "neo4j_neo4j_transaction_active"
#      metricsQuery: '1/avg_over_time(neo4j_neo4j_transaction_active[1m])'
#
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: adapter-config-external
#  namespace: NAMESPACE
#data:
#  config.yaml: |
#    externalRules:
#    - seriesQuery: '{__name__="neo4j_transaction_active",namespace!="",pod!=""}'
#      resources:
#        overrides:
#          namespace: {resource: "namespace"}
#          pod: {resource: "pod"}
#          service: {resource: "service"}
#      name:
#        matches: "neo4j_transaction_active"
#        as: "neo4j_transaction_active"
#      metricsQuery: 'neo4j_transaction_active'

#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: adapter-config-external
#  namespace: NAMESPACE
#data:
#  config.yaml: |
#    externalRules:
#    - seriesQuery: '{__name__=~"(neo4j_transaction_active|neo4j_transaction_terminated)",namespace!="",pod!=""}'
#      resources:
#        overrides:
#          namespace: {resource: "namespace"}
#          pod: {resource: "pod"}
#          service: {resource: "service"}
#      name:
#        as: "neo4j_metric"
#      metricsQuery: '1/(sum(deriv(neo4j_transaction_terminated[1m])))'

apiVersion: v1
kind: ConfigMap
metadata:
  name: adapter-config-external
  namespace: NAMESPACE
data:
  config.yaml: |
    externalRules:
    - seriesQuery: '{__name__="neo4j_transaction_committed_write",namespace!="",pod!=""}'
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
          service: {resource: "service"}
      name:
        as: "neo4j_metric"
      metricsQuery: 'clamp_max(1/(1.125*sum(rate(neo4j_transaction_committed_write[3m]))), 100)'
---
#metricsQuery: '1/(1+(sum(avg_over_time(neo4j_transaction_active[1m])) - sum(deriv(neo4j_transaction_terminated[1m]))))'
#seriesQuery: '{__name__=~"^neo4j_transaction_.*",namespace!="",pod!=""}'
#matches: "neo4j_transaction_.*"
#neo4j_transaction_terminated
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: prometheus-adapter-tls
  labels:
    name: prometheus-adapter-external
  name: prometheus-adapter-external
  namespace: NAMESPACE
spec:
  ports:
    - name: https
      port: 443
      targetPort: 6443
  selector:
    app: prometheus-adapter-external
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus-adapter-external
  name: prometheus-adapter-external
  namespace: NAMESPACE
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-adapter-external
  template:
    metadata:
      labels:
        app: prometheus-adapter-external
      name: prometheus-adapter-external
      namespace: NAMESPACE
    spec:
      #serviceAccountName: custom-metrics-apiserver
      serviceAccountName: external-metrics-apiserver
      containers:
        - name: prometheus-adapter-external
          image: directxman12/k8s-prometheus-adapter-amd64
          args:
            - --secure-port=6443
            - --tls-cert-file=/var/run/serving-cert/tls.crt
            - --tls-private-key-file=/var/run/serving-cert/tls.key
            - --logtostderr=true
            - --prometheus-url=http://prometheus-operated.NAMESPACE.svc:9090/
            - --metrics-relist-interval=1m
            - --v=4
            - --config=/etc/adapter/config.yaml
          ports:
            - containerPort: 6443
          volumeMounts:
            - mountPath: /var/run/serving-cert
              name: volume-serving-cert
              readOnly: true
            - mountPath: /etc/adapter/
              name: config
              readOnly: true
            - mountPath: /tmp
              name: tmp-vol
      volumes:
        - name: volume-serving-cert
          secret:
            secretName: prometheus-adapter-tls
        - name: config
          configMap:
            name: adapter-config-external
        - name: tmp-vol
          emptyDir: {}