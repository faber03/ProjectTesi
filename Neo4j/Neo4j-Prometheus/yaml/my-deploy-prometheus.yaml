#------------------------------------------------------ServiceMonitor
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: neo4j-monitor
  labels:
    #team: frontend
    app: neo4j
spec:
  selector:
    matchLabels:
      app: neo4j
  endpoints:
    - port: web
#-----------------------------------------------------------PROMETHEUS
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/metrics
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["get"]
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: default
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
spec:
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      #team: frontend
      app: neo4j
#  resources:
#    requests:
#      memory: 400Mi
#  enableAdminAPI: false
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  ports:
    - name: web
      port: 9090
      protocol: TCP
      targetPort: web
  selector:
    prometheus: prometheus
---
#route
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: prometheus
  name: prometheus
spec:
  port:
    targetPort: web
  path:
  to:
    kind: Service
    name: prometheus
    weight: 100
  wildcardPolicy: None











