<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="TestPlan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Lyon" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Lyon" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Lyon-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Lyon" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Lyon.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Venissieux" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Venissieux" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Venissieux-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Venissieux" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Venissieux.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Vienne" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Vienne" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Vienne-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Vienne" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Vienne.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Meyzieu" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Meyzieu" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Meyzieu-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Meyzieu" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Meyzieu.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Caluire-et-Cuire" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Caluire-et-Cuire" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Caluire-et-Cuire-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Caluire-et-Cuire" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Caluire-et-Cuire.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Saint-Genis-Laval" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Saint-Genis-Laval" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Saint-Genis-Laval-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Saint-Genis-Laval" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Saint-Genis-Laval.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Saint-Quentin-Fallavier" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Saint-Quentin-Fallavier" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Saint-Quentin-Fallavier-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Saint-Quentin-Fallavier" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Saint-Quentin-Fallavier.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Genas" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Genas" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Genas-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Genas" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Genas.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Ecully" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Ecully" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Ecully-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Ecully" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Ecully.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Dardilly" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Dardilly" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Dardilly-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Dardilly" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Dardilly.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Sainte-Foy-les-Lyon" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Sainte-Foy-les-Lyon" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Sainte-Foy-les-Lyon-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Sainte-Foy-les-Lyon" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Sainte-Foy-les-Lyon.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Villefontaine" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Villefontaine" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Villefontaine-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Villefontaine" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Villefontaine.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Chassieu" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Chassieu" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Chassieu-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Chassieu" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Chassieu.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Tassin-la-Demi-Lune" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Tassin-la-Demi-Lune" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Tassin-la-Demi-Lune-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Tassin-la-Demi-Lune" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Tassin-la-Demi-Lune.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Charvieu-Chavagneux" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Charvieu-Chavagneux" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Charvieu-Chavagneux-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Charvieu-Chavagneux" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Charvieu-Chavagneux.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Miribel" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Miribel" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Miribel-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Miribel" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Miribel.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Saint-Laurent-de-Mure" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Saint-Laurent-de-Mure" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Saint-Laurent-de-Mure-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Saint-Laurent-de-Mure" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Saint-Laurent-de-Mure.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Oullins" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Oullins" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Oullins-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Oullins" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Oullins.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Montluel" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Montluel" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Montluel-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Montluel" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Montluel.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="ConcurrencyThreadGroup_Heyrieux" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(shapingTimer,1,100,1)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">30</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Sampler_Heyrieux" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">ConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">Q.REQ</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <intProp name="JMSSampler.communicationStyle">0</intProp>
          <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">2000</stringProp>
          <stringProp name="HTTPSamper.xml_data">{&quot;linkId&quot;:${linkId},&quot;timestamp&quot;:${timestamp},&quot;avgTravelTime&quot;:${avgTravelTime},&quot;sdTravelTime&quot;:${sdTravelTime},&quot;numVehicles&quot;:${numVehicles},&quot;aggPeriod&quot;:{&quot;seconds&quot;:${aggPeriod.seconds},&quot;nanos&quot;:${aggPeriod.nanos}},&quot;startTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${startTime.date.year},&quot;month&quot;:${startTime.date.month},&quot;day&quot;:${startTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${startTime.time.hour},&quot;minute&quot;:${startTime.time.minute},&quot;second&quot;:${startTime.time.second},&quot;nano&quot;:${startTime.time.nano}}},&quot;endTime&quot;:{&quot;date&quot;:{&quot;year&quot;:${endTime.date.year},&quot;month&quot;:${endTime.date.month},&quot;day&quot;:${endTime.date.day}},&quot;time&quot;:{&quot;hour&quot;:${endTime.time.hour},&quot;minute&quot;:${endTime.time.minute},&quot;second&quot;:${endTime.time.second},&quot;nano&quot;:${endTime.time.nano}}}}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">tcp://artemis-activemq-artemis-master-external:61616</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="queue.Q.REQ" elementType="Argument">
                <stringProp name="Argument.name">queue.Q.REQ</stringProp>
                <stringProp name="Argument.value">Heyrieux-Northbound</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties"/>
          </elementProp>
        </JMSSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Csv_Heyrieux" enabled="true">
          <stringProp name="delimiter">;</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">./samples/Heyrieux.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="shapingTimer" enabled="true">
        <collectionProp name="load_profile">
          <collectionProp name="-2002903193">
            <stringProp name="49">1</stringProp>
            <stringProp name="1572">12</stringProp>
            <stringProp name="1515111">1800</stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.timers.VariableThroughputTimer>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.SynthesisReportGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Synthesis Report (filtered)" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">result/result.csv</stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.listener.GraphsGeneratorListener guiclass="TestBeanGUI" testclass="kg.apc.jmeter.listener.GraphsGeneratorListener" testname="jp@gc - Graphs Generator" enabled="true">
        <boolProp name="aggregateRows">false</boolProp>
        <boolProp name="autoScaleRows">false</boolProp>
        <stringProp name="endOffset"></stringProp>
        <stringProp name="excludeLabels"></stringProp>
        <boolProp name="excludeSamplesWithRegex">false</boolProp>
        <intProp name="exportMode">2</intProp>
        <stringProp name="filePrefix"></stringProp>
        <stringProp name="forceY"></stringProp>
        <stringProp name="granulation">1000</stringProp>
        <intProp name="graphHeight">600</intProp>
        <intProp name="graphWidth">800</intProp>
        <stringProp name="includeLabels"></stringProp>
        <boolProp name="includeSamplesWithRegex">false</boolProp>
        <stringProp name="limitRows">150</stringProp>
        <stringProp name="lineWeight"></stringProp>
        <stringProp name="lowCountLimit"></stringProp>
        <stringProp name="outputBaseFolder">result/graphs</stringProp>
        <boolProp name="paintGradient">true</boolProp>
        <boolProp name="paintZeroing">true</boolProp>
        <boolProp name="preventOutliers">false</boolProp>
        <boolProp name="relativeTimes">false</boolProp>
        <stringProp name="resultsFileName">result/result.csv</stringProp>
        <stringProp name="startOffset"></stringProp>
        <stringProp name="successFilter"></stringProp>
      </kg.apc.jmeter.listener.GraphsGeneratorListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>